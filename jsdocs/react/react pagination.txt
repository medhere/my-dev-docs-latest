

knex-paginate Example
    .paginate({ perPage: 10, currentPage: 2, isFromStart: boolean, isLengthAware: boolean, });
    .paginate({ ...req.query, isLengthAware: true })

        using Mantine Pagination
    const [users, setUsers] = useState([])
    const [pagination, setPagination] = useState({});
    const [perPage, setPerPage] = useState(5);

    const getUsers = (data) =>{
        data = data || {currentPage:1, perPage:perPage}
        XHR_REQUEST('get',`all/get-users/house/${auth?.house_id}`, {...data})
    }

    useEffect(() => {
        getUsers()
    }, [pathname, perPage])


	{users?.length > 0 && <div className='grid grid-cols-1'>
		<p> Total Records: <b>{pagination?.total || 0}</b> || From: <b>{pagination?.from+1 || 0}</b> To: <b>{pagination?.to || 0}</b> </p>
		<IonItem className='max-w-[200px] justify-self-center mb-1'>
			<IonLabel>Select Range</IonLabel>
			<IonSelect value={perPage} placeholder="Select Range" onIonChange={(e) => setPerPage(e.detail.value)} >
				<IonSelectOption value={5}>5</IonSelectOption>
				<IonSelectOption value={10}>10</IonSelectOption>
				<IonSelectOption value={25}>25</IonSelectOption>
				<IonSelectOption value={50}>50</IonSelectOption>
			</IonSelect>
		</IonItem>
		<Pagination 
			className='justify-self-center'
			total={pagination?.lastPage} page={pagination?.currentPage} 
			// siblings={3} boundaries={3} withEdges
			onChange={ page => getUsers({currentPage:page, perPage:perPage})} 
		>
		</Pagination>
		</div>
	}


LARAVEL Example
    .paginate(10)

    const [page, setPage] = useState(1);
    const [users, setUsers] = useState()
	const { pathname } = useLocation();

    const handleChange = (event, value) => {
        getUsers({page: value})
    };

    function getUsers(data=''){
        XHR_REQUEST('get',`users`,data)
        .then((res)=>{
            setUsers(res.data)
            setPage(res.data.current_page);
        }).catch((err)=>{
			Notify('alert',err.response.data.message,'error');
        })
    }

    useEffect(() => {
        getTenants()
    }, [pathname])

	<Pagination count={tenants?.last_page} page={page} onChange={handleChange} color="primary"/>
