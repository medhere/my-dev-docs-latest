Regex

this is a regular str

/is/i		i	Perform case-insensitive matching	
/is/g		g	Perform a global match (find all matches rather than stopping after the first match)	
/is/m 		m	Perform multiline matching
/[abc]/		[]	Find any of the characters between the brackets	
/[^abc]/	[^]	Find any character NOT between the brackets
/[0-9]/		[]	Find any of the digits between the brackets
/(this|a)/	|	Find any of the alternatives separated with
/this+/		n+	Matches any string that contains at least one n
/this*/		n*	Matches any string that contains zero or more occurrences of n
/this?/		n?	Matches any string that contains zero or one occurrences of n
/this{4}/	n{X}	Matches any string that contains a sequence of X n's
/this{2,4}/	n{X,Y}	Matches any string that contains a sequence of X to Y n's
/this{4,}/	n{X,}	Matches any string that contains a sequence of at least X n's
/this$/		n$	Matches any string with n at the end of it
/^this/		^n	Matches any string with n at the beginning of it
/is(?= a)/	?=n	Matches any string that is followed by a specific string n
/is(?! a)/		?!n	Matches any string that is not followed by a specific string n

/h.s/	.	Find a single character, except newline or line terminator



/\w/	\w	Find a word character
		\W	Find a non-word character
		\d	Find a digit
		\D	Find a non-digit character
		\s	Find a whitespace character
		\S	Find a non-whitespace character
		\b	Find a match at the beginning/end of a word, beginning like this: \bHI, end like this: HI\b
		\B	Find a match, but not at the beginning/end of a word
		\0	Find a NUL character
		\n	Find a new line character
		\f	Find a form feed character
		\r	Find a carriage return character
		\t	Find a tab character
		\v	Find a vertical tab character



Test/Exec
var patt = /e/;
patt.test("The best things in life are free!");
/e/.test("The best things in life are free!");
/e/.exec("The best things in life are free!");
