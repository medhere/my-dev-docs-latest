Mail
	.env
		MAIL_MAILER=sendmail
		MAIL_SENDMAIL='/usr/sbin/sendmail -t -i'

		MAIL_MAILER=smtp
		MAIL_HOST=mailhog
		MAIL_PORT=1025
		MAIL_USERNAME=null
		MAIL_PASSWORD=null
		MAIL_ENCRYPTION=null
		MAIL_FROM_ADDRESS="hello@example.com"
		MAIL_FROM_NAME="${APP_NAME}"

	config/mail.php
		<?php
		return [
			'default' => env('MAIL_MAILER', 'sendmail'),
			'mailers' => [
				'smtp' => [
					'transport' => 'smtp',
					'host' => env('MAIL_HOST', 'smtp.mailgun.org'),
					'port' => env('MAIL_PORT', 587),
					'encryption' => env('MAIL_ENCRYPTION', 'tls'),
					'username' => env('MAIL_USERNAME'),
					'password' => env('MAIL_PASSWORD'),
					'timeout' => null,
					'auth_mode' => null,
				],

				'sendmail' => [
					'transport' => 'sendmail',
					'path' => 'C:\laragon\bin\sendmail\sendmail.exe -bs',
					// 'path' => env('MAIL_SENDMAIL', '/usr/sbin/sendmail -bs')
				],
			],
		];


	New Mail
		php artisan make:mail Orders
		php artisan make:mail Orders --markdown=emails.orders
		
		contoller: app/Mail
		view: resources/views/emails

		Laravel 8
			namespace App\Mail;
			
			use App\Models\Order;
			use Illuminate\Bus\Queueable;
			use Illuminate\Mail\Mailable;
			use Illuminate\Queue\SerializesModels;
		
			class OrderShipped extends Mailable
			{
				use Queueable, SerializesModels;

				protected $order; //public $order for auto detection in mailable

				public function __construct(Order $order){
						$this->order = $order;
				}

				public function build(){
					return $this->from('example@example.com', 'Example')
								->replyTo($address, $name)
								->subject(string $subject)
								->priority(int $level)
								->view('emails.orders')->with([  'orderPrice' => $this->order->price, ])
									OR
								->markdown('emails.orders.shipped', [ 'orderPrice' => $this->->order->price, ]);
								->attach('/path/to/file','name.ext')
								->attachFromStorage('/path/to/file','name.ext')
								->attachFromStorageDisk('s3', '/path/to/file', 'name.ext');
				}

		Laravel 9

			namespace App\Mail;

			use Illuminate\Bus\Queueable;
			use Illuminate\Contracts\Queue\ShouldQueue;
			use Illuminate\Mail\Mailable;
			use Illuminate\Mail\Mailables\Content;
			use Illuminate\Mail\Mailables\Envelope;
			use Illuminate\Queue\SerializesModels;

			class Requests extends Mailable
			{
				use Queueable, SerializesModels;

				protected $order; //public $order for auto detection in mailable

				public function __construct(Order $order){
						$this->order = $order;
				}

				public function envelope()
				{
					return new Envelope(
						from: new Address('jeffrey@example.com', 'Jeffrey Way'),
						replyTo: [	new Address('taylor@example.com', 'Taylor Otwell'), ],
						subject: 'Requests',
						tags: ['shipment'],
						metadata: [ 'order_id' => $this->order->id, ],
					);
				}

				public function content()
				{
					return new Content( 
						markdown: 'emails.orders.shipped',
							OR
						view: 'view.name', 
						with: [
							'orderName' => $this->order->name,
							'orderPrice' => $this->order->price,
						],
					);
				}

				public function attachments()
				{
					return [ 
						Attachment::fromPath('/path/to/file')->as('name.pdf') ->withMime('application/pdf'),
						Attachment::fromStorage('/path/to/file'),
						Attachment::fromStorageDisk('s3', '/path/to/file'),
						Attachment::fromData(fn () => $this->pdf, 'Report.pdf')
					];
				}

				public function headers()
				{
					return new Headers(
						messageId: 'custom-message-id@example.com',
						references: ['previous-message@example.com'],
						text: [
							'X-Custom-Header' => 'Custom Value',
						],
					);
				}
			}


		email/orders.blade.php
			<div>
				<img src="{{ $message->embed($pathToImage) }}">
				<img src="{{ $message->embedData($data, 'example-image.jpg') }}">
				Price: {{ $orderPrice }}
			</div>


		Markdown Mailables
			Laravel 8
				@component('mail::message')
					# Order Shipped
					Your order has been shipped!

					@component('mail::panel')
						This is the panel content.
					@endcomponent

					@component('mail::table')
						| Laravel       | Table         | Example  |
						| ------------- |:-------------:| --------:|
						| Col 2 is      | Centered      | $10      |
						| Col 3 is      | Right-Aligned | $20      |
					@endcomponent

					@component('mail::button', ['url' => $url, 'color' => 'success'])	//primary, success, and error
						View Order
					@endcomponent

					Thanks,<br>
					{{ $name  }}
				@endcomponent

			Laravel 9
				<x-mail::message>
					# Order Shipped		
					Your order has been shipped!

					<x-mail::panel>
						This is the panel content.
					</x-mail::panel>

					<x-mail::table>
						| Laravel       | Table         | Example  |
						| ------------- |:-------------:| --------:|
						| Col 2 is      | Centered      | $10      |
						| Col 3 is      | Right-Aligned | $20      |
					</x-mail::table>
				
					<x-mail::button :url="$url" color="success">	//primary, success, and error
						View Order
					</x-mail::button>

					Thanks,<br>
					{{ config('app.name') }}
				</x-mail::message>

		Markdown Customizaing and Theming
		php artisan vendor:publish --tag=laravel-mail
			resources/views/vendor/mail/html
			resources/views/vendor/mail/text
			resources/views/vendor/mail/html/themes/default.css
				new theme for Laravel's Markdown components, new CSS file in html/themes directory. update the theme option of config/mail.php configuration


	Sending Mail
		use App\Mail\Orders;
		use Illuminate\Support\Facades\Mail;
			Mail::to(string|array $address, $name)
					OR->addAddresses(string|array $address)
				->cc($moreUsers)
				->bcc($evenMoreUsers)
				->send(new Orders($order));

			foreach (['taylor@example.com', 'dries@example.com'] as $recipient) {
				Mail::to($recipient)->send(new OrderShipped($order));
			}
			
			Mail::mailer('postmark')->to($request->user())->send(new Orders($order));

	Preview Mail
		Rendering Mailables
			use App\Mail\InvoicePaid;
			return (new InvoicePaid($invoice))->render();

		Previewing Mailables In The Browser
			return new App\Mail\InvoicePaid($invoice);

	

		
