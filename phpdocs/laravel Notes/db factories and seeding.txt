Factories

php artisan make:factory UserFactory --model=User

protected $model = User::class

public function definition()
    {
        $othertbl_ids = OtherTableModel::pluck('id');

        return [
            'name' => fake()->name(),
            'userid' => rand(100000, 999999),
            'email' => fake()->unique()->safeEmail(),
            'email_verified_at' => now(),
            'password' => '$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi', // password
            'remember_token' => Str::random(10),
            'isadmin' => fake()->numberBetween(0,1)
            'othertbl_id' => fake()->randomElement($othertbl_ids)
        ];
    }


Faker




Seeders

php artisan make:seeder UserSeeder
php artisan db:seed
php artisan db:seed --class=UserSeeder
php artisan migrate:fresh --seed

use WithoutModelEvents; //mute model events 

public function run()

    using query builder
        DB::table('users')->insert([
            'name' => Str::random(10),
            'email' => Str::random(10).'@gmail.com',
            'password' => Hash::make('password'),
        ]);


    using models with factories
        User::factory(10)->create();
        User::factory()->times(100)->create();
        User::factory()->count(50)->hasPosts(1)->create();
        User::factory()->create([
            'name' => 'Test User',
            'email' => 'test@example.com',
        ]);


inside DatabaseSeeder class, import other seeders

    call multiple 
        $this->call([
            UserSeeder::class,
            PostSeeder::class,
            CommentSeeder::class,
        ]);

    or add model factories directly
        User::factory(10)->create();
