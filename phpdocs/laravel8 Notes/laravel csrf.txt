csrf
	use Illuminate\Http\Request;

	Route::get('/token', function (Request $request) {
		$token = $request->session()->token();
			//OR
		$token = csrf_token();
	});
	
	Blade template
		<form method="POST" action="/profile">
		@csrf

		<!-- Equivalent to... -->
		<input type="hidden" name="_token" value="{{ csrf_token() }}" />
		</form>

	X-CSRF-TOKEN
	storage
	<meta name="csrf-token" content="{{ csrf_token() }}">
	usage
	$.ajaxSetup({
		headers: { 'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content') }
	});
	
	X-XSRF-TOKEN
	Laravel stores the current CSRF token in an encrypted XSRF-TOKEN cookie that is included with each response generated by the framework. You can use the cookie value to set the X-XSRF-TOKEN request header.

	Exclude from csrf
	exclude the routes by adding their URIs to the $except property of the VerifyCsrfToken middleware:
			protected $except = [
				'stripe/*',
				'http://example.com/foo/bar',
				'http://example.com/foo/*',
			];

